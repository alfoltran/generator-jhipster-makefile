#!/usr/bin/env bash

function notifyCI() {
  curl --location --request POST "https://gitlab.com/api/v4/projects/<%- projectId %>/deployments?environment=<%- environment %>/$5&sha=$1&ref=$2&tag=true&status=$4" \
    --header "PRIVATE-TOKEN: $3" \
    --header 'Content-Type: application/json' \
    --data-raw ''
}

function waitCI() {
  RESULT=1
  WATCHDOG=0
  echo "Waiting for Docker Push..."
  while [ $WATCHDOG -lt 10 ]; do
    STATE=$(curl -s --location --request GET "https://gitlab.com/api/v4/projects/<%- projectId %>/repository/commits/$1/statuses?name=Docker" \
      --header "PRIVATE-TOKEN: $3" |
      python3 -c 'import sys, json; print(json.load(sys.stdin)[0]["status"])' 2>/dev/null || echo '---')
    if [ "$STATE" == 'success' ]; then
      echo "Deploying..."
      WATCHDOG=10
      RESULT=0
    elif [ "$STATE" == 'failed' ]; then
      echo "Canceling..."
      WATCHDOG=10
    elif [ "$STATE" == 'canceled' ]; then
      echo "Canceling..."
      WATCHDOG=10
    else
      echo "Waiting for CI on $2..."
      WATCHDOG=$((WATCHDOG + 1))
      sleep 5m
    fi
  done
  return ${RESULT}
}

function update() {
  if [ "$#" -ne 5 ]; then
    echo "Use: ./deploy <<CONTAINER_NAME>> <<ENV_NAME>> <<GIT_SHA>> <<GIT_REF>> <<GIT_TOKEN>>"
    exit 1
  else
    echo "Updating Docker Image..."
    CONTAINER_NAME=$1
    ENV_NAME=$2
    shift 2
    notifyCI "$@" created "$ENV_NAME"
    if waitCI "$@"; then
      trap 'notifyCI "$@" failed' err
      docker stop "$CONTAINER_NAME" &&
        docker-compose pull &&
        docker-compose up -d --no-deps --build "$CONTAINER_NAME"
      notifyCI "$@" success
    else
      notifyCI "$@" canceled
    fi
    echo "Docker done!"
  fi
}

(
  if (flock -n 1000); then
    echo "Starting deploy..."
    update "$@"
    echo "Done!"
  else
    echo "Already there is a process running!"
  fi
) 1000>.deploying
